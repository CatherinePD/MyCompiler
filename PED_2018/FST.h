#pragma once
#include "stdafx.h"
#include "IT.h"
//структуры конечных автом которые разбирают лексемы
namespace FST
{
	struct RELATION				//ребро:символ->вершина графа переходов КА
	{
		char symbol;			//символ перехода
		short nnode;			//номер смежной вершины куда перейдёт
		RELATION(char, short);	//символ перехода, новое состояние
	};

	struct NODE					//вершина графа переходов
	{
		short n_relation;		//количество инциндентных ребер
		RELATION *relations;	//инциндентные ребра
		NODE();
		NODE(short n, RELATION rel, ...);  //количество инциндентных ребер, список ребер
	};

	struct FST   //недетерминированный конечный автомат
	{
		IT::IDDATATYPE type;
		char* string; //цепочка(строка, завершается 0х00)
		short position; //текущая позиция в цепочке
		short nstates; //количество состояний автомата
		NODE* node; //граф переходов:[0]-начальное состояние, [nstate-1]-конечное
		short* rstates; //возможные состояния автомата на данной позиции
		FST(short ns, NODE n, ...); //		для массива					, количество состояний автомата, список состояний(граф переходов)
		FST(char* s, FST&); //				для лексич разбора			, количество состояний автомата, список состояний(граф переходов)
		FST::FST(IT::IDDATATYPE type, short ns, NODE n, ...);
	};

	bool execute(FST& fst); //выполнить распознование цепочки, недетерминированный конечный автомат
}
